@using Masa.Auth.Contracts.Admin.Infrastructure.Constants
@inherits AdminCompontentBase

<MRow Class="pt-4">
    <MCol Md=12>
        <MCheckbox Disabled @bind-Value="@Dto.RequireClientSecret" Label="RequireClientSecret" />
    </MCol>
    <MCol>
        <STextField @bind-Value="@Dto.ClientSecret.Value" Label="Value" />
    </MCol>
    <MCol Md="@("auto")">
        <MMenu @bind-Value="_dateMenu"
               CloseOnContentClick="false"
               Transition="scale-transition"
               OffsetY>
            <ActivatorContent>
                <STextField @bind-Value="Dto.ClientSecret.Expiration"
                                  Label="Expiration" Outlined
                                  PrependInnerIcon="mdi-calendar"
                                  Readonly Style="width:140px;"
                                  @attributes="context.Attrs"></STextField>
            </ActivatorContent>
            <ChildContent>
                <MDatePicker @bind-Value="Dto.ClientSecret.Expiration"
                             NoTitle Scrollable OnInput="()=>_dateMenu=false">
                </MDatePicker>
            </ChildContent>
        </MMenu>
    </MCol>
    <MCol Md=12>
        <STextField @bind-Value="@Dto.ClientSecret.Description" Label="Description" />
    </MCol>

    <MCol Md=12>
        <MButton OnClick="AddSecret" Class="border-btn" Block>@T("Add New")</MButton>
    </MCol>
    <MCol Md=12>
        <MDataTable Headers="_headers" Items="Dto.ClientSecrets" TItem="ClientSecretDto" HideDefaultFooter DisablePagination Class="table-border-none">
            <HeaderColContent Context="header">
                <span class="body2">@header.Text</span>
            </HeaderColContent>
            <ItemColContent>
                @switch (context.Header.Value)
                {
                    case "Action":
                        <MIcon OnClick="()=>RemoveSecret(context.Item)">mdi-close</MIcon>
                        break;
                    default:
                        <span class="subtitle">@context.Value</span>
                        break;
                }
            </ItemColContent>
        </MDataTable>
    </MCol>
</MRow>

@code {
    [Parameter]
    public ClientCredentialDto Dto { get; set; } = new();

    [Parameter]
    public EventCallback<ClientCredentialDto> DtoChanged { get; set; }

    bool _dateMenu;
    List<DataTableHeader<ClientSecretDto>> _headers { get; set; } = new()
    {
        new() { Text = "Type", Value = nameof(ClientSecretDto.Type), Sortable = false },
        new() { Text = "Value", Value = nameof(ClientSecretDto.Value), Sortable = false },
        new() { Text = "Description", Value = nameof(ClientSecretDto.Description), Sortable = false },
        new() { Text = "Expiration", Value = nameof(ClientSecretDto.Expiration), Sortable = false },
        new() { Text = "Action", Value = "Action", Sortable = false,Align="center" },
    };

    private void AddSecret()
    {
        if (string.IsNullOrWhiteSpace(Dto.ClientSecret.Value) || string.IsNullOrWhiteSpace(Dto.ClientSecret.Type))
        {
            return;
        }
        Dto.ClientSecrets.Add(Dto.ClientSecret);
        Dto.ClientSecret = new();
    }

    private void RemoveSecret(ClientSecretDto model)
    {
        Dto.ClientSecrets.Remove(model);
    }
}
