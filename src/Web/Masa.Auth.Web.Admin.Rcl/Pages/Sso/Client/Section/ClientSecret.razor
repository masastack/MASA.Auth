@using Masa.Auth.Contracts.Admin.Infrastructure.Constants
@inherits AdminCompontentBase

<MContainer>
    <MRow>
        <MCol Md=6>
            <MSelect @bind-Value="@Dto.ClientSecret.Type"
                     Label="Type"
                     Outlined Dense
                     Items="@_secretTypes"
                     ItemText="u => u.Text"
                     ItemValue="u => u.Value">
            </MSelect>
        </MCol>
        <MCol Md=6>
            <DefaultTextField @bind-Value="@Dto.ClientSecret.Value" Label="Value" />
        </MCol>
        <MCol Md=6>
            <DefaultTextField @bind-Value="@Dto.ClientSecret.Description" Label="Description" />
        </MCol>
        <MCol Md=6>
            <DefaultTextField @bind-Value="@Dto.ClientSecret.Expiration" Label="Expiration"/>
        </MCol>
        <MCol Class="d-flex justify-end">
            <MButton OnClick="AddSecret">Add New</MButton>
        </MCol>
        <MCol Md=12>
            <MDataTable Headers="_headers" Items="Dto.ClientSecrets" TItem="ClientSecretDto" HideDefaultFooter DisablePagination Class="table-border-none">
            <HeaderColContent Context="header">
                <span class="text-btn">@header.Text</span>
            </HeaderColContent>
            <ItemColContent>
                @switch (context.Header.Value)
                {
                    case "Action":
                        <MIcon OnClick="()=>RemoveSecret(context.Item)" Color="neutral-lighten-2" Class="ml-7">mdi-delete-circle-outline</MIcon>
                        break;
                    default:
                        <span class="text-body3">@context.Value</span>
                        break;
                }
            </ItemColContent>
        </MDataTable>
        </MCol>
    </MRow>
</MContainer>

@code {
    [Parameter]
    public ClientCredentialDto Dto { get; set; } = new();

    [Parameter]
    public EventCallback<ClientCredentialDto> DtoChanged { get; set; }

    List<SelectItemDto<string>> _secretTypes = ClientConsts.GetSecretTypes();
    public List<DataTableHeader<ClientSecretDto>> _headers { get; set; } = new()
    {
        new() { Text = "Type", Value = nameof(ClientSecretDto.Type), Sortable = false },
        new() { Text = "Value", Value = nameof(ClientSecretDto.Value), Sortable = false },
        new() { Text = "Description", Value = nameof(ClientSecretDto.Description), Sortable = false },
        new() { Text = "Expiration", Value = nameof(ClientSecretDto.Expiration), Sortable = false },
        new() { Text = "", Value = "Action", Sortable = false },
    };

    private void AddSecret()
    {
        if(string.IsNullOrWhiteSpace(Dto.ClientSecret.Value) || string.IsNullOrWhiteSpace(Dto.ClientSecret.Type))
        {
            return;
        }
        Dto.ClientSecrets.Add(Dto.ClientSecret);
    }

    private void RemoveSecret(ClientSecretDto model)
    {
        Dto.ClientSecrets.Remove(model);
    }
}
