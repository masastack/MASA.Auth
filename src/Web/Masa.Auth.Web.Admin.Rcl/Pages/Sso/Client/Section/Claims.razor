<MContainer>
    <MRow>
        <MCol Md=6>
            <DefaultTextField @bind-Value="clientClaimDto.Type" Label="Type" />
        </MCol>
        <MCol Md=6>
            <DefaultTextField @bind-Value="clientClaimDto.Value" Label="Value"/>
        </MCol>
        <MCol Class="d-flex justify-end">
            <MButton OnClick="AddClaim">Add New</MButton>
        </MCol>
        <MCol Md=12>
            <MDataTable Headers="_headers" Items="Value" TItem="ClientClaimDto" HideDefaultFooter DisablePagination Class="table-border-none">
            <HeaderColContent Context="header">
                <span class="text-btn">@header.Text</span>
            </HeaderColContent>
            <ItemColContent>
                @switch (context.Header.Value)
                {
                    case "Action":
                        <MIcon OnClick="()=>Value.Remove(context.Item)" Color="neutral-lighten-2" Class="ml-7">mdi-delete-circle-outline</MIcon>
                        break;
                    default:
                        <span class="text-body3">@context.Value</span>
                        break;
                }
            </ItemColContent>
        </MDataTable>
        </MCol>
    </MRow>
</MContainer>

@code {
    [Parameter]
    public List<ClientClaimDto> Value { get; set; } = new();

    [Parameter]
    public EventCallback<List<ClientClaimDto>> ValueChanged { get; set; }

    ClientClaimDto clientClaimDto = new();

    public List<DataTableHeader<ClientClaimDto>> _headers { get; set; } = new()
    {
        new() { Text = "Type", Value = nameof(ClientClaimDto.Type), Sortable = false },
        new() { Text = "Value", Value = nameof(ClientClaimDto.Value), Sortable = false },
        new() { Text = "", Value = "Action", Sortable = false },
    };

    private void AddClaim()
    {
        if (string.IsNullOrWhiteSpace(clientClaimDto.Type) || string.IsNullOrWhiteSpace(clientClaimDto.Value))
        {
            return;
        }
        if (Value.Any(p => p.Type == clientClaimDto.Type.Trim()))
        {
            return;
        }
        Value.Add(clientClaimDto);
        clientClaimDto = new();
    }
}