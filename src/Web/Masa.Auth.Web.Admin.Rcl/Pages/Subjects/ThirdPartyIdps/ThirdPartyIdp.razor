@page "/thirdPartyIdp"
@inherits AdminCompontentBase

<PageTitle>
    @T("ThirdPartyIdp")
</PageTitle>

<DefaultCard>
    <AutoHeight>
        <HeaderContent>
            <div class="d-flex mb-6">
                <SSearch @bind-Value="Search" />
                <MSpacer />
                <SButton Small OnClick="() => OpenAddThirdPartyIdpDialog()" BorderRadiusClass="rounded-lg">
                    <MIcon Size=18>@IconConstants.Add</MIcon>
                    <span class="ml-2 btn">@T("Add")</span>
                </SButton>
            </div>
        </HeaderContent>
        <AutoHeightContent>
            <SDataTable
                Dense
                Headers="GetHeaders()" 
                Items="ThirdPartyIdps" 
                TItem="ThirdPartyIdpDto" 
                ItemsPerPage="PageSize">
                <HeaderColContent Context="header">
                    <span>@header.Text</span>
                </HeaderColContent>
                <ItemColContent>
                    @switch (context.Header.Value)
                    {
                        case nameof(ThirdPartyIdpDto.Icon):
                            <div class="hover-pointer" @onclick="()=> OpenUpdateThirdPartyIdpDialog(context.Item)">
                                 <MAvatar Size="20">
                                    <img src="@context.Item.Icon" />
                                </MAvatar>
                            </div>                         
                            break;
                        case nameof(ThirdPartyIdpDto.Name):
                            <div>
                                <span>@context.Item.Name</span>
                            </div>
                            break;
                        case (nameof(ThirdPartyIdpDto.DisplayName)):
                            <span>@context.Item.DisplayName</span>
                            break;
                        case nameof(ThirdPartyIdpDto.AuthenticationType):
                            <span>@T(context.Item.AuthenticationType.ToString())</span>
                            break;
                        case nameof(ThirdPartyIdpDto.ThirdPartyIdpType):
                            <span>@T(context.Item.ThirdPartyIdpType.ToString())</span>
                            break;
                        case nameof(UserDto.Enabled):
                            <EnableChip Value=context.Item.Enabled />
                            break;
                        case nameof(ThirdPartyIdpDto.CreationTime):
                            <SDateTimeTitle Value=context.Item.CreationTime />
                            break;
                        case "Action":
                            <SIcon Tooltip="@T("Edit")" OnClick="()=> OpenUpdateThirdPartyIdpDialog(context.Item)">@IconConstants.Update</SIcon>
                            <SIcon Tooltip="@T("Delete")" Class="ml-6" OnClick="()=> OpenRemoveThirdPartyIdpDialog(context.Item)">@IconConstants.Remove</SIcon>
                            break;
                        default:
                            <SItemCol Value="@context.Value"></SItemCol>
                            break;
                    }
                </ItemColContent>
            </SDataTable>
        </AutoHeightContent>
        <FooterContent>
            <SPagination Class="mt-5" @bind-Page="Page" @bind-PageSize=PageSize Total=Total />
        </FooterContent>
    </AutoHeight>
</DefaultCard>

<AddThirdPartyIdpDialog @bind-Visible="AddThirdPartyIdpDialogVisible" OnSubmitSuccess=GetThirdPartyIdpsAsync />
<UpdateThirdPartyIdpDialog ThirdPartyIdpId=CurrentThirdPartyIdpId @bind-Visible="UpdateThirdPartyIdpDialogVisible" OnSubmitSuccess=GetThirdPartyIdpsAsync />