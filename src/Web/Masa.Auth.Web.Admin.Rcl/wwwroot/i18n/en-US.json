{
  "$Text": "English",
  "$DateTimeFormat": "MM/dd/yyyy HH:mm:ss",
  "$DateFormat": "MM/dd/yyyy",
  "ThirdPartyIdp": "ThirdParty identity provider",
  "BasicInformation": "Basic Information",
  "DetailInformation": "Detail Information",
  "Support mdi and fas icon": "Support like mdi-* and fa:fas-* icons",
  "ClientIdTips": "Unique ID of the client",
  "ClientNameTips": "Client display name (used for logging and consent screen)",
  "AllowedCorsOriginsTips": "CORS policy for JavaScript clients.",
  "ClientPropertiesTips": "Put client any extra data as needed.",
  "ConsentLifetimeTips": "Lifetime of a user consent in seconds. Defaults to null (no expiration).",
  "UserSsoLifetimeTips": "User authenticated life cycle, default is null (no authentication when switching between multiple systems in the client).",
  "EnableLocalLoginTips": "Specifies if this client can use local accounts, or external IdPs only. Defaults to true.",
  "FrontChannelLogoutUriTips": "Specifies logout URI at client for HTTP based front-channel logout. ",
  "BackChannelLogoutUriTips": "Specifies logout URI at client for HTTP based back-channel logout.",
  "FrontChannelLogoutSessionRequiredTips": "Specifies if the user’s session id should be sent to the FrontChannelLogoutUri. Defaults to true.",
  "BackChannelLogoutSessionRequiredTips": "Specifies if the user’s session id should be sent in the request to the BackChannelLogoutUri. Defaults to true.",
  "AllowOfflineAccessTips": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)",
  "IdentityTokenLifetimeTips": "Lifetime to identity token in seconds (defaults to 300 seconds / 5 minutes)",
  "AccessTokenLifetimeTips": "Lifetime of access token in seconds (defaults to 3600 seconds / 1 hour)",
  "AccessTokenTypeTips": "Specifies whether the access token is a reference token or a self contained JWT token (defaults to Jwt).",
  "AuthorizationCodeLifetimeTips": "Lifetime of authorization code in seconds (defaults to 300 seconds / 5 minutes)",
  "AbsoluteRefreshTokenLifetimeTips": "Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days",
  "SlidingRefreshTokenLifetimeTips": "Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days",
  "PairWiseSubjectSaltTips": "Salt value used in pair-wise subjectId generation for users of this client.",
  "IncludeJwtIdTips": "Specifies whether JWT access tokens should have an embedded unique ID (via the jti claim). Defaults to true.",
  "UpdateAccessTokenClaimsOnRefreshTips": "Gets or sets a value indicating whether the access token (and its claims) should be updated on a refresh token request.",
  "AlwaysIncludeUserClaimsInIdTokenTips": "When requesting both an id token and access token, should the user claims always be added to the id token instead of requiring the client to use the userinfo endpoint. Default is false.",
  "AllowAccessTokensViaBrowserTips": "Specifies whether this client is allowed to receive access tokens via the browser. This is useful to harden flows that allow multiple response types",
  "AlwaysSendClientClaimsTips": "If set, the client claims will be sent for every flow. If not, only for client credentials flow (default is false)",
  "RefreshTokenUsageTips": "ReUse the refresh token handle will stay the same when refreshing tokens \r\nOneTime the refresh token handle will be updated when refreshing tokens. This is the default.",
  "RefreshTokenExpirationTips": "Absolute the refresh token will expire on a fixed point in time (specified by the AbsoluteRefreshTokenLifetime). This is the default. \r\nSliding when refreshing the token, the lifetime of the refresh token will be renewed (by the amount specified in SlidingRefreshTokenLifetime). The lifetime will not exceed AbsoluteRefreshTokenLifetime.",
  "AllowedIdentityTokenSigningAlgorithmsTips": "List of allowed signing algorithms for identity token. If empty, will use the server default signing algorithm.",
  "TeamAvatarText": "Auto generated by default team name prefix",
  "PermissionCodeMsg": "Recommended code mode, refer to example for format: resource.method",
  "AvatarText": "Avatar Text",
  "NickNameBlock": {
    "ChineseLetterNumber": "NickName can only input Chinese 、English letters、Arabic numerals.",
    "MaxLength": "Nickname cannot be larger than 50 characters.",
    "MinLength": "Nickname cannot be less than 2 characters.",
    "Required": "Nickname is required."
  },
  "CustomLoginBlock": {
    "TitleName": "Name",
    "LogoUri": "Logo uri",
    "ClientName": "Client name",
    "NameRequired": "Name is required",
    "DisplayNameRequired": "DisplayName is required",
    "PhoneNumberAndEmailEmptyError": "One of phone number and email must have a value"
  },
  "ConfirmChangePassword": "I confirm to change the password",
  "PasswordValidateFailed": "Password validate failed",
  "AppId is required": "AppID is required",
  "ApiScopes": "API Scopes",
  "ApiScope": "API Scope",
  "ApiScopeBlock": {
    "Api Scope": "API Scope",
    "Add ApiScope": "Add API Scope",
    "Edit ApiScope": "Edit API Scope",
    "Name": "Name",
    "ApiScope.Required": "API Scope Required",
    "Delete ApiScope": "Delete API Scope",
    "Are you sure delete apiScope data": "Are you sure delete API Scope data",
    "Add apiScope success": "Add API Scope success",
    "Delete apiScope data success": "Delete API Scope data success",
    "Edit apiScope data success": "Edit API Scope data success",
    "Are you sure delete apiScope \"{0}\"?": "Are you sure delete API Scope \"{0}\"?"
  },
  "OperationLog": "Operation log",
  "OperationLogBlock": {
    "Operator": "Operator",
    "OperationType": "Operation type",
    "OperationDescription": "Operation description",
    "Please select type": "Please select type",
    "Please enter operation description": "Please enter operation description",
    "AddUser": "Add user",
    "EditUser": "Edit user",
    "EditUserAuthorization": "Edit user authorization",
    "RemoveUser": "Remove user",
    "EditUserPassword": "Edit user password",
    "AddStaff": "Add staff",
    "EditStaff": "Edit staff",
    "RemoveStaff": "Remove staff",
    "SyncStaff": "Sync staff",
    "EditStaffPassword": "Edit staff password",
    "AddRole": "Add role",
    "EditRole": "Edit role",
    "RemoveRole": "Remove role",
    "AddPermission": "Add permission",
    "EditPermission": "Edit permission",
    "RemovePermission": "Remove permission",
    "AddTeam": "Add team",
    "EditTeam": "Edit team",
    "RemoveTeam": "Remove team",
    "AddDepartment": "Add department",
    "EditDepartment": "Edit department",
    "RemoveDepartment": "Remove department",
    "CopyDepartment": "Copy department",
    "AddClient": "Add client",
    "EditClient": "Edit client",
    "RemoveClient": "Remove client",
    "AddUserClaim": "Add user claim",
    "EditUserClaim": "Edit user claim",
    "RemoveUserClaim": "Remove user claim",
    "AddStandardUserClaims": "Add standard user claims",
    "AddIdentityResource": "Add identity resource",
    "EditIdentityResource": "Edit identity resource",
    "RemoveIdentityResource": "Remove identity resource",
    "AddStandardIdentityResources": "Add standard identity resources",
    "AddApiScope": "Add API scope",
    "EditApiScope": "Edit API scope",
    "RemoveApiScope": "Remove API scope",
    "AddApiResource": "Add API resource",
    "EditApiResource": "Edit API resource",
    "RemoveApiResource": "Remove API resource",
    "AddCustomLogin": "Add custom login",
    "EditCustomLogin": "Edit custom login",
    "RemoveCustomLogin": "Remove custom login",
    "Login": "Login",
    "SignOut": "Sign out",
    "AddThirdPartyIdp": "Add third party IdP",
    "EditThirdPartyIdp": "Edit third party IdP",
    "RemoveThirdPartyIdp": "Remove third party IdP",
    "AddPosition": "Add position",
    "EditPosition": "Edit position",
    "RemovePosition": "Remove position",
    "UpsertAppTag": "Upsert app tag",
    "EditDefaultPassword": "Edit default password",
    "RegisterUser": "Register user"
  },
  "ApiResource": "API Resource",
  "ApiResourceBlock": {
    "Add ApiResource": "Add API resource",
    "Edit ApiResource": "Edit API resource",
    "Name": "Name",
    "ApiResource.Required": "API resource required",
    "Delete ApiResource": "Delete API resource",
    "Add apiResource success": "Add API resource success",
    "Delete apiResource data success": "Delete API resource data success",
    "Edit apiResource data success": "Edit API resource data success",
    "Are you sure delete apiResource \"{0}\"?": "Are you sure delete API resource \"{0}\"?"
  },
  "Client": "Client",
  "ClientBlock": {
    "ClientId": "Client ID",
    "ClientName": "Client name",
    "ClientURL": "Client url",
    "ClientType": "Client type",
    "RequireConsent": "Require consent",
    "AllowRememberConsent": "Allow remember consent",
    "ConsentLifetime": "Consent lifetime",
    "UserCodeType": "User code type",
    "DeviceCodeLifetime": "Device code lifetime",
    "RequireRequestObject": "Require request object",
    "EnableLocalLogin": "Enable local login",
    "UserSsoLifetime": "User SSO lifetime",
    "AllowedCorsOrigins": "Allowed CORS origins",
    "PostLogoutRedirectUri": "Post logout redirect URL",
    "CallBackRedirectUri": "Callback redirect URL"
  },
  "CreationTime": "Creation time",
  "ModificationTime": "Modification time",
  "AddChildDepartment": "Add child department",
  "PermissionBlock": {
    "MatchPattern": "Match Pattern",
    "MatchPatternTip": "Used in special cases when auto-match left menu is highlighted",
    "AppVisible": "Application visible range",
    "SaveAppGlobalNavVisibleSuccess": "Successfully saved the visible range of the application"
  },
  "RepeatAdd": "Add Repeatedly",
  "ThirdPartyIdpBlock": {
    "DisplayName": "Display name",
    "ClientId": "Client id",
    "ClientSecret": "Client secret",
    "AuthenticationTypes": "Authentication types",
    "VerifyFile": "Verify file",
    "AuthenticationType": "Authentication type",
    "PlatformType": "Platform type",
    "CallbackPath": "Callback path",
    "AuthorizationEndpoint": "Authorization endpoint",
    "TokenEndpoint": "Token endpoint",
    "UserInformationEndpoint": "User information endpoint",
    "LDAPAccountSynchronizPrompt": "LDAP account synchronization has been executed in the background, please check later"
  },
  "ThirdPartyUser": "Third party user",
  "UserBlock": {
    "UserState": "User state",
    "CompanyName": "Company name"
  },
  "StaffBlock": {
    "JobNumber": "Job number",
    "StaffType": "Staff type",
    "StaffSyncTemplate": "Staff sync template",
    "AddUser": "Add user",
    "BindUser": "Bind user"
  },
  "RoleBlock": {
    "RoleOwner": "Role owner",
    "AddRoleUserSuccess": "Add role user success",
    "DeleteRoleUserSuccess": "Delete role user success",
    "ConfirmDeleteRoleUser \"{0}\"?": "Are you sure to delete the role user\"{0}\""
  },
  "IdentityResourceBlock": {
    "DisplayName": "Display name"
  },
  "Webhook": {
    "WebhookEvent": "Webhook event",
    "IsActive": "Is active"
  },
  "VisibleType": "Visible type",
  "AllVisible": "All visible",
  "AllInvisible": "All invisible"
}
