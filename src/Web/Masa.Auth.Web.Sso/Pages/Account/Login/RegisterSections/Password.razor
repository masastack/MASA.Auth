@inherits SsoSectionComponentBase

<MTextField @bind-Value="@Value.Password" Class="mt-3" Label="@T("Password")" PrependInnerIcon="mdi-lock"
            Type="@(_showPwd ? "text" : "password")" Placeholder="@T("PasswordPlaceHolder")" Rules="_pwdRules"
            AppendIcon="@(_showPwd ? "mdi-eye" : "mdi-eye-off")" OnAppendClick="()=>_showPwd = !_showPwd" Outlined>
</MTextField>
<MTextField @bind-Value="@Value.ConfirmPassword" Class="mt-3" Label="@T("ConfirmPassword")" PrependInnerIcon="mdi-lock"
            Type="@(_showPwd ? "text" : "password")" Placeholder="@T("ConfirmPasswordPlaceHolder")" Rules="_confirmPwdRules"
            AppendIcon="@(_showPwd ? "mdi-eye" : "mdi-eye-off")" OnAppendClick="()=>_showPwd = !_showPwd" Outlined>
</MTextField>

@code {
    [Parameter]
    public RegisterInputModel Value { get; set; } = new();

    [Parameter]
    public EventCallback<RegisterInputModel> ValueChanged { get; set; }

    [Parameter]
    public bool Required { get; set; }

    bool _showPwd;

    private IList<Func<string, StringBoolean>> _pwdRules => new List<Func<string, StringBoolean>>
    {
        value => Regex.Match(value,  LoginOptions.PasswordRegular).Success ? true : "Password format does not match."
    };

    private IList<Func<string, StringBoolean>> _confirmPwdRules => new List<Func<string, StringBoolean>>
    {
        value => value.Equals(Value.Password) ? true : "The passwords entered twice are not equal."
    };

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && Required)
        {
            _pwdRules.Add(value => !string.IsNullOrEmpty(value) ? true : "Required.");
        }
        base.OnAfterRender(firstRender);
    }
}
