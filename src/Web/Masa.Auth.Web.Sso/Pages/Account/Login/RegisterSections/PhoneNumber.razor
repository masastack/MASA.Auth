@inherits SsoSectionComponentBase

<MTextField PrependInnerIcon="mdi-cellphone" @bind-Value="Value.PhoneNumber" Label="@T("PhoneNumber")"
            Placeholder="@T("PhoneNumberPlaceHolder")" Outlined @ref="_phoneTextField" Rules="_phoneNumberRules">
</MTextField>
<CaptchaSendTextField Class="mt-3" @bind-Value="Value.SmsCode" OnClick="GetSmsCode" />

@code {
    [Parameter]
    public RegisterInputModel Value { get; set; } = new();

    [Parameter]
    public EventCallback<RegisterInputModel> ValueChanged { get; set; }

    [Parameter]
    public bool Required { get; set; } = true;

    MTextField<string> _phoneTextField = null!;

    [Inject]
    public IAuthClient AuthClient { get; set; } = null!;

    IEnumerable<Func<string, StringBoolean>> _phoneNumberRules = new List<Func<string, StringBoolean>>();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (!Value.EmailRegister)
            {
                _phoneNumberRules = new List<Func<string, StringBoolean>>
                {
                    value => !string.IsNullOrEmpty(value) ? true : T("PhoneRequired"),
                    value => Regex.Match(value, LoginOptions.PhoneRegular).Success ? true : T("PhoneNumberPrompt")
                };
            }
        }
        base.OnAfterRender(firstRender);
    }

    private async Task<bool> GetSmsCode()
    {
        if (_phoneTextField.Validate())
        {
            await AuthClient.UserService.SendMsgCodeAsync(new SendMsgCodeModel
                {
                    SendMsgCodeType = SendMsgCodeTypes.Register,
                    PhoneNumber = Value.PhoneNumber
                });
        }
        return _phoneTextField.Validate();
    }
}
