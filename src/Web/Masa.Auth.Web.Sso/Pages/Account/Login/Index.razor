@page "/account/login/index"
@page "/account/login"

@inherits SsoCompontentBase
@inject IClientStore _clientStore
@inject IAuthenticationSchemeProvider _schemeProvider
@layout SimpleLayout

@if (_viewModel.EnableLocalLogin)
{
    <MCard Width=510 Height=620>
        <MTabs @bind-Value="tab" BackgroundColor="transparent" Color="primary" Grow>
            <MTab Value="@("login")">@T("Login")</MTab>
            <MTab Value="@("register")" Disabled>@T("Register")</MTab>
        </MTabs>
        <MTabsItems Value="@tab">
            <MTabItem Value="@("login")">
                <CascadingValue Value="@ReturnUrl">
                    <LoginSection LoginHint="@_loginHint" />
                </CascadingValue>
            </MTabItem>
            <MTabItem Value="@("register")">
                <RegisterSection />
            </MTabItem>
        </MTabsItems>
    </MCard>
}

@if (_viewModel.VisibleExternalProviders.Any())
{
    <div class="col-sm-6">
        <div class="card">
            <div class="card-header">
                <h2>External Account</h2>
            </div>
            <div class="card-body">
                <ul class="list-inline">
                    @foreach (var provider in _viewModel.VisibleExternalProviders)
                    {
                        //todo
                        <li class="list-inline-item">
                            <a class="btn btn-secondary" asp-page="/ExternalLogin/Challenge"
                        asp-route-scheme="@provider.AuthenticationScheme" asp-route-returnUrl="@ReturnUrl">
                                @provider.DisplayName
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
}

@if (!_viewModel.EnableLocalLogin && !_viewModel.VisibleExternalProviders.Any())
{
    <div class="alert alert-warning">
        <strong>Invalid login request</strong>
        There are no login schemes configured for this request.
    </div>
}
